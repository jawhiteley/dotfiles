<?xml version="1.0"?>
<root>
  <!-- http://calebhicks.com/2016/karabiner-for-sculpt/ -->

  <devicevendordef>
    <vendorname>Microsoft</vendorname>
    <vendorid>0x045e</vendorid>
  </devicevendordef>

  <deviceproductdef>
    <productname>Sculpt</productname>
    <productid>0x07a5</productid>
  </deviceproductdef>

  <item>
    <name>* Microsoft Sculpt Ergo</name>

    <item>
      <name>Sculpt swap Command and Option</name>
      <appendix>This swaps the default Command and Option keys to match a layout more familiar to Mac users.</appendix>
      <appendix>Option  [Alt] -> Command</appendix>
      <appendix>Command [Windows] -> Option</appendix>
      <identifier>sculpt.swap_command_option</identifier>
      <device_only>DeviceVendor::Microsoft, DeviceProduct::Sculpt</device_only>
      <autogen>
        __KeyToKey__
        KeyCode::OPTION_L,
        KeyCode::COMMAND_L
      </autogen>
      <autogen>
        __KeyToKey__
        KeyCode::OPTION_R,
        KeyCode::COMMAND_R
      </autogen>
      <autogen>
        __KeyToKey__
        KeyCode::COMMAND_L,
        KeyCode::OPTION_L
      </autogen>
    </item>

    <item>
      <name>Sculpt Application to Option</name>
      <appendix>This maps the Microsoft Sculpt's Application key to Option.</appendix>
      <identifier>sculpt.application_to_option</identifier>
      <device_only>DeviceVendor::Microsoft, DeviceProduct::Sculpt</device_only>
      <autogen>
        __KeyToKey__
        KeyCode::PC_APPLICATION,
        KeyCode::OPTION_R
      </autogen>
    </item>

    <item>
      <name>Sculpt Insert to Function key</name>
      <identifier>sculpt.insert_to_fn</identifier>
      <device_only>DeviceVendor::Microsoft, DeviceProduct::Sculpt</device_only>
      <autogen>
        __KeyToKey__
        KeyCode::HELP,
        KeyCode::FN,
        <!-- double-tap for Fn-lock -->
        Option::KEYTOKEY_DELAYED_ACTION,
        KeyCode::VK_NONE,
        Option::KEYTOKEY_DELAYED_ACTION_CANCELED_BY, KeyCode::HELP,
        KeyCode::VK_LOCK_FN,
        KeyCode::VK_KEYTOKEY_DELAYED_ACTION_DROP_EVENT, <!-- drop second key event -->
      </autogen>
    </item>

    <item>
      <name>Sculpt Esc to Function-Lock</name>
      <identifier>sculpt.esc_to_fn_lock</identifier>
      <device_only>DeviceVendor::Microsoft, DeviceProduct::Sculpt</device_only>
      <autogen>
        __HoldingKeyToKey__
        KeyCode::ESCAPE,
        <!-- short press -->
        @begin
        KeyCode::ESCAPE,
        @end
        <!-- hold -->
        @begin
        KeyCode::VK_LOCK_FN,
        @end
        Option::NOREPEAT,
      </autogen>
    </item>

    <!-- differentiate function and functional keys by holding; I usually use modifier keys instead -->
    <item>
      <name>Sculpt F1...F6: short (function keys) and hold (functional)</name>
      <appendix>short -> F1...F6; long -> functional</appendix>
      <appendix>F1  -> Prev track</appendix>
      <appendix>F2  -> Next track</appendix>
      <appendix>F3  -> Play / Pause</appendix>
      <appendix>F4  -> Mute</appendix>
      <appendix>F5  -> Volume -</appendix>
      <appendix>F6  -> Volume +</appendix>
      <identifier>sculpt.f1_f6_hold_functional</identifier>
      <device_only>DeviceVendor::Microsoft, DeviceProduct::Sculpt</device_only>
      <autogen>
        __HoldingKeyToKey__
        KeyCode::F1, ModifierFlag::NONE,
        <!-- short press -->
        @begin
        KeyCode::F1,
        @end
        <!-- hold -->
        @begin
        KeyCode::VK_CONSUMERKEY_BRIGHTNESS_DOWN,
        @end
        Option::NOREPEAT,
      </autogen>
      <autogen>
        __HoldingKeyToKey__
        KeyCode::F2, ModifierFlag::NONE,
        <!-- short press -->
        @begin
        KeyCode::F2,
        @end
        <!-- hold -->
        @begin
        KeyCode::VK_CONSUMERKEY_BRIGHTNESS_UP,
        @end
        Option::NOREPEAT,
      </autogen>
      <autogen>
        __HoldingKeyToKey__
        KeyCode::F3, ModifierFlag::NONE,
        <!-- short press -->
        @begin
        KeyCode::F3,
        @end
        <!-- hold -->
        @begin
        KeyCode::EXPOSE_ALL,
        @end
        Option::NOREPEAT,
      </autogen>
      <autogen>
        __HoldingKeyToKey__
        KeyCode::F4, ModifierFlag::NONE,
        <!-- short press -->
        @begin
        KeyCode::F4,
        @end
        <!-- hold -->
        @begin
        KeyCode::CURSOR_DOWN, ModifierFlag::CONTROL_R,
        @end
        Option::NOREPEAT,
      </autogen>
      <autogen>
        __HoldingKeyToKey__
        KeyCode::F5, ModifierFlag::NONE,
        <!-- short press -->
        @begin
        KeyCode::F5,
        @end
        <!-- hold -->
        @begin
        KeyCode::DASHBOARD,
        @end
        Option::NOREPEAT,
      </autogen>
      <autogen>
        __HoldingKeyToKey__
        KeyCode::F6, ModifierFlag::NONE,
        <!-- short press -->
        @begin
        KeyCode::F6,
        @end
        <!-- hold -->
        @begin
        KeyCode::LAUNCHPAD,
        @end
        Option::NOREPEAT,
      </autogen>

    </item>

    <item>
      <name>Sculpt F7...F12: short (functional media) and hold (function keys)</name>
      <appendix>short -> Media; long -> F7...F12</appendix>
      <appendix>F7  -> Prev track</appendix>
      <appendix>F8  -> Next track</appendix>
      <appendix>F9  -> Play / Pause</appendix>
      <appendix>F10 -> Mute</appendix>
      <appendix>F11 -> Volume -</appendix>
      <appendix>F12 -> Volume +</appendix>
      <identifier>sculpt.f7_f12_hold_media</identifier>
      <device_only>DeviceVendor::Microsoft, DeviceProduct::Sculpt</device_only>

      <autogen>
        __KeyToKey__
        KeyCode::F7, ModifierFlag::FN,
        KeyCode::F7
      </autogen>
      <autogen>
        __HoldingKeyToKey__
        KeyCode::F7, ModifierFlag::NONE,
        <!-- short press -->
        @begin
        KeyCode::VK_CONSUMERKEY_MUSIC_PREV,
        @end
        <!-- hold -->
        @begin
        KeyCode::F7,
        @end
        Option::NOREPEAT,
      </autogen>

      <autogen>
        __KeyToKey__
        KeyCode::F8, ModifierFlag::FN,
        KeyCode::F8
      </autogen>
      <autogen>
        __HoldingKeyToKey__
        KeyCode::F8, ModifierFlag::NONE,
        <!-- short press -->
        @begin
        KeyCode::VK_CONSUMERKEY_MUSIC_NEXT,
        @end
        <!-- hold -->
        @begin
        KeyCode::F8,
        @end
        Option::NOREPEAT,
      </autogen>

      <autogen>
        __KeyToKey__
        KeyCode::F9, ModifierFlag::FN,
        KeyCode::F9
      </autogen>
      <autogen>
        __HoldingKeyToKey__
        KeyCode::F9, ModifierFlag::NONE,
        <!-- short press -->
        @begin
        KeyCode::VK_CONSUMERKEY_MUSIC_PLAY,
        @end
        <!-- hold -->
        @begin
        KeyCode::F9,
        @end
        Option::NOREPEAT,
      </autogen>

      <autogen>
        __KeyToKey__
        KeyCode::F10, ModifierFlag::FN,
        KeyCode::F10
      </autogen>
      <autogen>
        __HoldingKeyToKey__
        KeyCode::F10, ModifierFlag::NONE,
        <!-- short press -->
        @begin
        KeyCode::VK_CONSUMERKEY_VOLUME_MUTE,
        @end
        <!-- hold -->
        @begin
        KeyCode::F10,
        @end
        Option::NOREPEAT,
      </autogen>

      <autogen>
        __KeyToKey__
        KeyCode::F11, ModifierFlag::FN,
        KeyCode::F11
      </autogen>
      <autogen>
        __HoldingKeyToKey__
        KeyCode::F11, ModifierFlag::NONE,
        <!-- short press -->
        @begin
        KeyCode::VK_CONSUMERKEY_VOLUME_DOWN,
        @end
        <!-- hold -->
        @begin
        KeyCode::F11,
        @end
        Option::NOREPEAT,
      </autogen>

      <autogen>
        __KeyToKey__
        KeyCode::F12, ModifierFlag::FN,
        KeyCode::F12
      </autogen>
      <autogen>
        __HoldingKeyToKey__
        KeyCode::F12, ModifierFlag::NONE,
        <!-- short press -->
        @begin
        KeyCode::VK_CONSUMERKEY_VOLUME_UP,
        @end
        <!-- hold -->
        @begin
        KeyCode::F12,
        @end
        Option::NOREPEAT,
      </autogen>

    </item>

    <item>
      <name>Change Option+F1...F12 to Functional Keys</name>
      <appendix>F1  -> Brightness -</appendix>
      <appendix>F2  -> Brightness +</appendix>
      <appendix>F3  -> All Windows</appendix>
      <appendix>F4  -> Application Windows</appendix>
      <appendix>F5  -> Dashboard</appendix>
      <appendix>F6  -> Launchpad</appendix>
      <appendix>F7  -> Prev track</appendix>
      <appendix>F8  -> Next track</appendix>
      <appendix>F9  -> Play / Pause</appendix>
      <appendix>F10 -> Mute</appendix>
      <appendix>F11 -> Volume -</appendix>
      <appendix>F12 -> Volume +</appendix>
      <identifier>sculpt.option_f1_f12_to_functional</identifier>
      <device_only>DeviceVendor::Microsoft, DeviceProduct::Sculpt</device_only>
      <autogen>__KeyToKey__ KeyCode::F1,  MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_OPTION, KeyCode::VK_CONSUMERKEY_BRIGHTNESS_DOWN</autogen>
      <autogen>__KeyToKey__ KeyCode::F2,  MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_OPTION, KeyCode::VK_CONSUMERKEY_BRIGHTNESS_UP</autogen>
      <autogen>__KeyToKey__ KeyCode::F3,  MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_OPTION, KeyCode::EXPOSE_ALL</autogen>
      <autogen>__KeyToKey__ KeyCode::F4,  MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_OPTION, KeyCode::CURSOR_DOWN, ModifierFlag::CONTROL_R</autogen>
      <autogen>__KeyToKey__ KeyCode::F5,  MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_OPTION, KeyCode::DASHBOARD</autogen>
      <autogen>__KeyToKey__ KeyCode::F6,  MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_OPTION, KeyCode::LAUNCHPAD</autogen>
      <autogen>__KeyToKey__ KeyCode::F7,  MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_OPTION, ConsumerKeyCode::MUSIC_PREV</autogen>
      <autogen>__KeyToKey__ KeyCode::F8,  MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_OPTION, ConsumerKeyCode::MUSIC_NEXT</autogen>
      <autogen>__KeyToKey__ KeyCode::F9,  MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_OPTION, ConsumerKeyCode::MUSIC_PLAY</autogen>
      <autogen>__KeyToKey__ KeyCode::F10, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_OPTION, ConsumerKeyCode::VOLUME_MUTE</autogen>
      <autogen>__KeyToKey__ KeyCode::F11, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_OPTION, ConsumerKeyCode::VOLUME_DOWN</autogen>
      <autogen>__KeyToKey__ KeyCode::F12, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_OPTION, ConsumerKeyCode::VOLUME_UP</autogen>
    </item>

    <item>
      <name>Change Fn+F1...F12 to Functional Keys</name>
      <appendix>F1  -> Brightness -</appendix>
      <appendix>F2  -> Brightness +</appendix>
      <appendix>F3  -> All Windows</appendix>
      <appendix>F4  -> Application Windows</appendix>
      <appendix>F5  -> Dashboard</appendix>
      <appendix>F6  -> Launchpad</appendix>
      <appendix>F7  -> Prev track</appendix>
      <appendix>F8  -> Next track</appendix>
      <appendix>F9  -> Play / Pause</appendix>
      <appendix>F10 -> Mute</appendix>
      <appendix>F11 -> Volume -</appendix>
      <appendix>F12 -> Volume +</appendix>
      <identifier>private.fn_f1_f12_to_functional</identifier>
      <!-- <device_only>DeviceVendor::Microsoft, DeviceProduct::Sculpt</device_only> -->
      <autogen>__KeyToKey__ KeyCode::F1,  ModifierFlag::FN, KeyCode::VK_CONSUMERKEY_BRIGHTNESS_DOWN</autogen>
      <autogen>__KeyToKey__ KeyCode::F2,  ModifierFlag::FN, KeyCode::VK_CONSUMERKEY_BRIGHTNESS_UP</autogen>
      <autogen>__KeyToKey__ KeyCode::F3,  ModifierFlag::FN, KeyCode::EXPOSE_ALL</autogen>
      <autogen>__KeyToKey__ KeyCode::F4,  ModifierFlag::FN, KeyCode::CURSOR_DOWN, ModifierFlag::CONTROL_R</autogen>
      <autogen>__KeyToKey__ KeyCode::F5,  ModifierFlag::FN, KeyCode::DASHBOARD</autogen>
      <autogen>__KeyToKey__ KeyCode::F6,  ModifierFlag::FN, KeyCode::LAUNCHPAD</autogen>
      <autogen>__KeyToKey__ KeyCode::F7,  ModifierFlag::FN, ConsumerKeyCode::MUSIC_PREV</autogen>
      <autogen>__KeyToKey__ KeyCode::F8,  ModifierFlag::FN, ConsumerKeyCode::MUSIC_NEXT</autogen>
      <autogen>__KeyToKey__ KeyCode::F9,  ModifierFlag::FN, ConsumerKeyCode::MUSIC_PLAY</autogen>
      <autogen>__KeyToKey__ KeyCode::F10, ModifierFlag::FN, ConsumerKeyCode::VOLUME_MUTE</autogen>
      <autogen>__KeyToKey__ KeyCode::F11, ModifierFlag::FN, ConsumerKeyCode::VOLUME_DOWN</autogen>
      <autogen>__KeyToKey__ KeyCode::F12, ModifierFlag::FN, ConsumerKeyCode::VOLUME_UP</autogen>
    </item>

    <!--
    <item>
      <name>Remap Fn-F8 to iTunes Next Track</name>
      <appendix>This maps the Microsoft Sculpt's Windows button on the mouse to F13.</appendix>
      <identifier>sculpt.iTunes_next</identifier>
      <device_only>DeviceVendor::Microsoft, DeviceProduct::Sculpt</device_only>
      <autogen>
        __KeyToKey__
        KeyCode::F21,
        ConsumerKeyCode::MUSIC_NEXT
      </autogen>
    </item>
    -->


    <!-- Mouse -->
    <item>
      <name>Remap Sculpt Windows button on mouse to Launchpad</name>
      <appendix>This maps the Microsoft Sculpt's Windows button on the mouse to Launchpad.</appendix>
      <identifier>sculpt.windows_to_launchpad</identifier>
      <device_only>DeviceVendor::Microsoft, DeviceProduct::Sculpt</device_only>
      <autogen>
        __KeyToKey__
        KeyCode::COMMAND_R,
        KeyCode::LAUNCHPAD
      </autogen>
    </item>

    <!-- NumPad -->
    <modifierdef>NumLock</modifierdef>
    <modifierdef>#</modifierdef> <!-- shorter version of NumLock -->
    <modifierdef>NUM_MEDIA</modifierdef>
    <modifierdef>=</modifierdef> <!-- short for media controls: this is what appears in the notification -->

    <item>
      <name>NumPad</name>
      <appendix>Make the NumLock Key actually toggle a modifier lock.</appendix>
      <appendix>NumLock maps NumPad keys to media control keys:</appendix>
      <appendix>5 -> Play/Pause</appendix>
      <appendix>4/6 -> Prev/Next (Hold to move forward/back within a track in iTunes)</appendix>
      <appendix>7/1 -> move forward/back within a track in iTunes</appendix>
      <appendix>8/2 -> Volume +/-</appendix>
      <appendix>9/3 -> Brightness +/-</appendix>
      <appendix>0 -> Mute</appendix>
      <appendix>-/+ -> Up/Down</appendix>
      <appendix>. -> activate Remote Buddy Hotkey Remote</appendix>
      <identifier>sculpt.numlock</identifier>
      <device_only>DeviceVendor::Microsoft, DeviceProduct::Sculpt</device_only>

      <block>
        <modifierlocked_only>ModifierFlag::REMOTE_MENU</modifierlocked_only>
        <autogen>
          __KeyToKey__
          KeyCode::KEYPAD_CLEAR,
          KeyCode::ENTER, ModifierFlag::CONTROL_L | ModifierFlag::OPTION_L,
          KeyCode::VK_LOCK_=,
          KeyCode::VK_LOCK_REMOTE_FORCE_OFF,
          KeyCode::VK_LOCK_REMOTE_HOTKEY_FORCE_OFF,
          KeyCode::VK_LOCK_REMOTE_MENU_FORCE_OFF,
        </autogen>
      </block>

      <autogen>
        __KeyToKey__
        KeyCode::KEYPAD_CLEAR,
        KeyCode::VK_LOCK_=,
        KeyCode::VK_LOCK_REMOTE_FORCE_OFF,
        KeyCode::VK_LOCK_REMOTE_HOTKEY_FORCE_OFF,
        KeyCode::VK_LOCK_REMOTE_MENU_FORCE_OFF,
      </autogen>

      <!-- To make the media keys the default (require NumLock to use numbers), use these conditions in the blocks below:
        <modifier_not>ModifierFlag::NumLock</modifier_not>
        <modifier_not>ModifierFlag::NumLock | ModifierFlag::CONTROL_L | ModifierFlag::OPTION_L</modifier_not>
      -->

      <block>
        <modifier_only>ModifierFlag::=</modifier_only>

        <block>
          <modifier_only>ModifierFlag::= | ModifierFlag::NONE</modifier_only>
          <autogen>
            __KeyToKey__
            KeyCode::KEYPAD_DOT,
            KeyCode::VK_NONE
          </autogen>
          <autogen>
            __KeyToKey__
            KeyCode::KEYPAD_0,
            KeyCode::VK_CONSUMERKEY_VOLUME_MUTE
          </autogen>
          <autogen>
            __KeyToKey__
            KeyCode::KEYPAD_1,
            KeyCode::CURSOR_LEFT, ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L,
          </autogen>
          <autogen>
            __KeyToKey__
            KeyCode::KEYPAD_2,
            KeyCode::VK_CONSUMERKEY_VOLUME_DOWN
          </autogen>
          <autogen>
            __KeyToKey__
            KeyCode::KEYPAD_3,
            KeyCode::VK_CONSUMERKEY_BRIGHTNESS_DOWN
          </autogen>
          <autogen>
            __HoldingKeyToKey__
            KeyCode::KEYPAD_4,
            <!-- short press -->
            @begin
            KeyCode::VK_CONSUMERKEY_MUSIC_PREV,
            @end
            <!-- hold -->
            @begin
            KeyCode::CURSOR_LEFT, ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L,
            @end
          </autogen>
          <autogen>
            __KeyToKey__
            KeyCode::KEYPAD_5,
            KeyCode::VK_CONSUMERKEY_MUSIC_PLAY
          </autogen>
          <autogen>
            __HoldingKeyToKey__
            KeyCode::KEYPAD_6,
            <!-- short press -->
            @begin
            KeyCode::VK_CONSUMERKEY_MUSIC_NEXT,
            @end
            <!-- hold -->
            @begin
            KeyCode::CURSOR_RIGHT, ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L,
            @end
          </autogen>
          <autogen>
            __KeyToKey__
            KeyCode::KEYPAD_7,
            KeyCode::CURSOR_RIGHT, ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L,
          </autogen>
          <autogen>
            __KeyToKey__
            KeyCode::KEYPAD_8,
            KeyCode::VK_CONSUMERKEY_VOLUME_UP
          </autogen>
          <autogen>
            __KeyToKey__
            KeyCode::KEYPAD_9,
            KeyCode::VK_CONSUMERKEY_BRIGHTNESS_UP
          </autogen>
          <autogen>
            __KeyToKey__
            KeyCode::KEYPAD_MINUS,
            KeyCode::CURSOR_UP    <!-- based on keyboard layout, not semantics -->
          </autogen>
          <autogen>
            __KeyToKey__
            KeyCode::KEYPAD_PLUS,
            KeyCode::CURSOR_DOWN    <!-- based on keyboard layout, not semantics -->
          </autogen>
          <autogen>
            __KeyToKey__
            KeyCode::ENTER,
            KeyCode::RETURN
          </autogen>
        </block>

        <!-- Remote Buddy shortcuts: via the KEYPAD_DOT (period) key -->
        <!-- These need to activate when other modifiers are active (like the locked ones they trigger) -->
        <modifierdef>REMOTE</modifierdef>
        <modifierdef>REMOTE_HOTKEY</modifierdef>
        <modifierdef>REMOTE_MENU</modifierdef>

        <!-- I was hoping to be able to automatically lock and unlock the REMOTE modifiers with the menu: 
             This assumes that only these keys can activate / deactivate the menu, but there are other ways of doing either, which can lead to the REMOTE_MENU flag becoming out of sync with the actual menu state.
             It is safer to only enable the menu when the remote modifier is active, which achieves the same overall effect.
             -->

        <block>
          <autogen>
            __KeyToKey__
            KeyCode::KEYPAD_SLASH,
            KeyCode::VK_LOCK_REMOTE_FORCE_OFF,
          </autogen>
          <autogen>
            __KeyToKey__
            KeyCode::KEYPAD_MULTIPLY,
            KeyCode::VK_LOCK_REMOTE_FORCE_ON,
          </autogen>
        </block>

        <block>
          <modifier_only>ModifierFlag::= | ModifierFlag::REMOTE</modifier_only>
          <autogen>
            __HoldingKeyToKey__
            KeyCode::KEYPAD_DOT,
            <!-- short press -->
            @begin
            KeyCode::ENTER, ModifierFlag::CONTROL_L | ModifierFlag::OPTION_L,
            @end
            <!-- hold -->
            @begin
            KeyCode::ENTER, ModifierFlag::CONTROL_L | ModifierFlag::OPTION_L,
            @end
            Option::NOREPEAT,
          </autogen>
          <autogen>
            __KeyToKey__
            KeyCode::KEYPAD_0,
            KeyCode::VK_NONE
          </autogen>
          <autogen>
            __KeyToKey__
            KeyCode::KEYPAD_1,
            KeyCode::VK_NONE
          </autogen>
          <autogen>
            __HoldingKeyToKey__
            KeyCode::KEYPAD_2,
            <!-- short press -->
            @begin
            KeyCode::KEYPAD_2, ModifierFlag::CONTROL_L, ModifierFlag::OPTION_L,
            @end
            <!-- hold -->
            @begin
            KeyCode::KEYPAD_2, ModifierFlag::CONTROL_L, ModifierFlag::OPTION_L,
            @end
            Option::NOREPEAT,
          </autogen>
          <autogen>
            __KeyToKey__
            KeyCode::KEYPAD_3,
            KeyCode::VK_NONE
          </autogen>
          <autogen>
            __HoldingKeyToKey__
            KeyCode::KEYPAD_4,
            <!-- short press -->
            @begin
            KeyCode::KEYPAD_4, ModifierFlag::CONTROL_L, ModifierFlag::OPTION_L,
            @end
            <!-- hold -->
            @begin
            KeyCode::KEYPAD_4, ModifierFlag::CONTROL_L, ModifierFlag::OPTION_L,
            @end
            Option::NOREPEAT,
          </autogen>
          <autogen>
            __HoldingKeyToKey__
            <!-- short press -->
            KeyCode::KEYPAD_5,
            @begin
            KeyCode::KEYPAD_5, ModifierFlag::CONTROL_L, ModifierFlag::OPTION_L,
            @end
            <!-- hold -->
            @begin
            KeyCode::KEYPAD_5, ModifierFlag::CONTROL_L, ModifierFlag::OPTION_L,
            @end
            Option::NOREPEAT,
          </autogen>
          <autogen>
            __HoldingKeyToKey__
            <!-- short press -->
            KeyCode::KEYPAD_6,
            @begin
            KeyCode::KEYPAD_6, ModifierFlag::CONTROL_L, ModifierFlag::OPTION_L,
            @end
            <!-- hold -->
            @begin
            KeyCode::KEYPAD_6, ModifierFlag::CONTROL_L, ModifierFlag::OPTION_L,
            @end
            Option::NOREPEAT,
          </autogen>
          <autogen>
            __KeyToKey__
            KeyCode::KEYPAD_7,
            KeyCode::VK_NONE
          </autogen>
          <autogen>
            __HoldingKeyToKey__
            <!-- short press -->
            KeyCode::KEYPAD_8,
            @begin
            KeyCode::KEYPAD_8, ModifierFlag::CONTROL_L, ModifierFlag::OPTION_L,
            @end
            <!-- hold -->
            @begin
            KeyCode::KEYPAD_8, ModifierFlag::CONTROL_L, ModifierFlag::OPTION_L,
            @end
            Option::NOREPEAT,
          </autogen>
          <autogen>
            __KeyToKey__
            KeyCode::KEYPAD_9,
            KeyCode::VK_NONE
          </autogen>
          <autogen>
            __HoldingKeyToKey__
            KeyCode::KEYPAD_MINUS,
            <!-- short press -->
            @begin
            KeyCode::KEYPAD_8, ModifierFlag::CONTROL_L, ModifierFlag::OPTION_L,
            @end
            <!-- hold -->
            @begin
            KeyCode::KEYPAD_8, ModifierFlag::CONTROL_L, ModifierFlag::OPTION_L,
            @end
            Option::NOREPEAT,
          </autogen>
          <autogen>
            __HoldingKeyToKey__
            KeyCode::KEYPAD_PLUS,
            <!-- short press -->
            @begin
            KeyCode::KEYPAD_2, ModifierFlag::CONTROL_L, ModifierFlag::OPTION_L,
            @end
            <!-- hold -->
            @begin
            KeyCode::KEYPAD_2, ModifierFlag::CONTROL_L, ModifierFlag::OPTION_L,
            @end
            Option::NOREPEAT,
          </autogen>
          <autogen>
            __HoldingKeyToKey__
            KeyCode::ENTER,
            <!-- short press -->
            @begin
            KeyCode::KEYPAD_5, ModifierFlag::CONTROL_L, ModifierFlag::OPTION_L,
            @end
            <!-- hold -->
            @begin
            KeyCode::KEYPAD_5, ModifierFlag::CONTROL_L, ModifierFlag::OPTION_L,
            @end
            Option::NOREPEAT,
          </autogen>
        </block>

        <!-- These keys send the same keycodes as keys on the main keyboard.
             I won't remap them here.
             Clear = ESCAPE
             [calculator]
             Backspace = DELETE
             Enter [actually, the key marked 'Enter' on the main keyboard sends RETURN]
             -->
      </block>

    </item>

  </item>
</root>
